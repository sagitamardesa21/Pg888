// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLUpdateChannelTooLong : TLUpdateBase 
	{
		[Flags]
		public enum Flag : Int32
		{
			Pts = (1 << 0),
		}

		public bool HasPts { get { return Flags.HasFlag(Flag.Pts); } set { Flags = value ? (Flags | Flag.Pts) : (Flags & ~Flag.Pts); } }

		public Flag Flags { get; set; }
		public Int32 ChannelId { get; set; }
		public Int32? Pts { get; set; }

		public TLUpdateChannelTooLong() { }
		public TLUpdateChannelTooLong(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.UpdateChannelTooLong; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (Flag)from.ReadInt32();
			ChannelId = from.ReadInt32();
			if (HasPts) Pts = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xEB0467FB);
			to.Write((Int32)Flags);
			to.Write(ChannelId);
			if (HasPts) to.Write(Pts.Value);
		}

		private void UpdateFlags()
		{
			HasPts = Pts != null;
		}
	}
}