// <auto-generated/>
using System;

namespace Telegram.Api.TL.Stickers.Methods
{
	/// <summary>
	/// RCP method stickers.createStickerSet.
	/// Returns <see cref="Telegram.Api.TL.TLMessagesStickerSet"/>
	/// </summary>
	public partial class TLStickersCreateStickerSet : TLObject
	{
		[Flags]
		public enum Flag : Int32
		{
			Masks = (1 << 0),
		}

		public bool IsMasks { get { return Flags.HasFlag(Flag.Masks); } set { Flags = value ? (Flags | Flag.Masks) : (Flags & ~Flag.Masks); } }

		public Flag Flags { get; set; }
		public TLInputUserBase UserId { get; set; }
		public String Title { get; set; }
		public String ShortName { get; set; }
		public TLVector<TLInputStickerSetItem> Stickers { get; set; }

		public TLStickersCreateStickerSet() { }
		public TLStickersCreateStickerSet(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.StickersCreateStickerSet; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (Flag)from.ReadInt32();
			UserId = TLFactory.Read<TLInputUserBase>(from);
			Title = from.ReadString();
			ShortName = from.ReadString();
			Stickers = TLFactory.Read<TLVector<TLInputStickerSetItem>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x9BD86E6A);
			to.Write((Int32)Flags);
			to.WriteObject(UserId);
			to.Write(Title);
			to.Write(ShortName);
			to.WriteObject(Stickers);
		}
	}
}