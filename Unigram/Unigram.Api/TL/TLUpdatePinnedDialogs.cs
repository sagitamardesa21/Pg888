// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLUpdatePinnedDialogs : TLUpdateBase 
	{
		[Flags]
		public enum Flag : Int32
		{
			Order = (1 << 0),
		}

		public bool HasOrder { get { return Flags.HasFlag(Flag.Order); } set { Flags = value ? (Flags | Flag.Order) : (Flags & ~Flag.Order); } }

		public Flag Flags { get; set; }
		public TLVector<TLPeerBase> Order { get; set; }

		public TLUpdatePinnedDialogs() { }
		public TLUpdatePinnedDialogs(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.UpdatePinnedDialogs; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (Flag)from.ReadInt32();
			if (HasOrder) Order = TLFactory.Read<TLVector<TLPeerBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xD8CAF68D);
			to.Write((Int32)Flags);
			if (HasOrder) to.WriteObject(Order);
		}

		private void UpdateFlags()
		{
			HasOrder = Order != null;
		}
	}
}