// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLPhoto : TLPhotoBase 
	{
		[Flags]
		public enum Flag : Int32
		{
			HasStickers = (1 << 0),
		}

		public bool IsHasStickers { get { return Flags.HasFlag(Flag.HasStickers); } set { Flags = value ? (Flags | Flag.HasStickers) : (Flags & ~Flag.HasStickers); } }

		public Flag Flags { get; set; }
		public Int64 AccessHash { get; set; }
		public Int32 Date { get; set; }
		public TLVector<TLPhotoSizeBase> Sizes { get; set; }

		public TLPhoto() { }
		public TLPhoto(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.Photo; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (Flag)from.ReadInt32();
			Id = from.ReadInt64();
			AccessHash = from.ReadInt64();
			Date = from.ReadInt32();
			Sizes = TLFactory.Read<TLVector<TLPhotoSizeBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x9288DD29);
			to.Write((Int32)Flags);
			to.Write(Id);
			to.Write(AccessHash);
			to.Write(Date);
			to.WriteObject(Sizes);
		}
	}
}