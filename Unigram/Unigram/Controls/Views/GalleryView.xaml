<local:ContentDialogBase
    x:Class="Unigram.Controls.Views.GalleryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unigram.Controls"
    xmlns:controls="using:Unigram.Controls"
    xmlns:viewModels="using:Unigram.ViewModels"
    xmlns:common="using:Unigram.Common"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Background="{x:Null}"
    OverlayBrush="{x:Null}"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    Unloaded="OnUnloaded">

    <Control.Resources>
        <Style x:Name="TransportLessMediaPlayerStyle" TargetType="MediaPlayerElement">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MediaPlayerElement">
                        <Grid x:Name="LayoutRoot">
                            <Border Background="Transparent" />
                            <Image
                                Source="{TemplateBinding PosterSource}"
                                Stretch="{TemplateBinding Stretch}" />
                            <MediaPlayerPresenter x:Name="MediaPlayerPresenter"
                                                      IsFullWindow="{TemplateBinding IsFullWindow}"
                                                      Stretch="{TemplateBinding Stretch}"
                                                      MediaPlayer="{TemplateBinding MediaPlayer}"/>
                            <Grid x:Name="TimedTextSourcePresenter" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem" x:Key="ListViewItemExpanded">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource SystemControlFocusVisualPrimaryBrush}" />
            <Setter Property="FocusVisualPrimaryThickness" Value="2" />
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource SystemControlFocusVisualSecondaryBrush}" />
            <Setter Property="FocusVisualSecondaryThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale" />
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Width" Value="23"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Width" Value="23"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Width" Value="23"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Margin" Value="6,0"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Margin" Value="6,0"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Margin" Value="6,0"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable" />
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground"
                            IsHitTestVisible="False"
                            Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            Opacity="0"
                            Control.IsTemplateFocusTarget="True" />
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                             In the DataPlaceholder state, the Content is not loaded yet so we
                             approximate the size of the item using placeholder text. -->
                            <TextBlock x:Name="PlaceholderTextBlock"
                            Opacity="0"
                            Text="Xg"
                            Foreground="{x:Null}"
                            Margin="{TemplateBinding Padding}"
                            IsHitTestVisible="False"
                            AutomationProperties.AccessibilityView="Raw" />
                            <Rectangle x:Name="PlaceholderRect" Visibility="Collapsed" Fill="{ThemeResource ListViewItemPlaceholderBackground}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="GalleryItemTemplate" x:DataType="viewModels:GalleryItem">
            <controls:AspectView
                Constraint="{x:Bind Source, Mode=OneWay}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Image Source="{x:Bind Source, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}"
                        Loaded="ImageView_ImageOpened"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="UniformToFill"
                       IsHitTestVisible="False"/>
                <local:TransferButton
                    Completed="Download_Click"
                    Transferable="{x:Bind Source, Mode=OneWay}" 
                    IsTransferring="{x:Bind Source.IsTransferring, Mode=OneWay}"
                    Progress="{x:Bind Source.Progress, Mode=OneWay}"
                    Style="{StaticResource MediaTransferButtonStyle}"/>
            </controls:AspectView>
        </DataTemplate>
    </Control.Resources>

    <controls:GalleryTransportControls x:Name="Transport" RequestedTheme="Dark">
        <controls:GalleryTransportControls.Content>
            <Grid>
                <Border x:Name="Layer" Background="Black" Grid.RowSpan="3"/>

                <Grid x:Name="LayoutRoot">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Click="ImageView_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextBlockButtonStyle}" Grid.Column="1"/>

                    <ContentControl x:Name="Element2" ContentTemplate="{StaticResource GalleryItemTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                    <ContentControl x:Name="Element0" ContentTemplate="{StaticResource GalleryItemTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="1"/>
                    <ContentControl x:Name="Element1" ContentTemplate="{StaticResource GalleryItemTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="2"/>
                </Grid>
            </Grid>
        </controls:GalleryTransportControls.Content>
        <controls:GalleryTransportControls.Header>
            <Grid x:Name="TopBar" Height="{ThemeResource AppBarThemeCompactHeight}">
                <TextBlock
                    Text="{x:Bind ConvertOf(ViewModel.Position, ViewModel.TotalItems), Mode=OneWay}"
                    Visibility="{x:Bind ViewModel.TotalItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource BaseTextBlockStyle}"/>

                <local:GlyphButton Command="{x:Bind ViewModel.StickersCommand}"
                                   Visibility="{x:Bind (Visibility)ViewModel.SelectedItem.HasStickers, Mode=OneWay}"
                                   FontFamily="{StaticResource TelegramThemeFontFamily}"
                                   HorizontalAlignment="Right"
                                   Glyph="&#xE60E;"
                                   FontSize="24"/>
            </Grid>
        </controls:GalleryTransportControls.Header>
        <controls:GalleryTransportControls.Footer>
            <Grid x:Name="BotBar">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{x:Bind ViewModel.SelectedItem.Caption, Mode=OneWay}"
                           Visibility="{x:Bind ViewModel.SelectedItem.Caption, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Margin="12,8"
                           Grid.ColumnSpan="3"/>

                <ListView x:Name="List"
                          ItemsSource="{x:Bind ViewModel.Group}"
                          SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=OneWay}"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.HorizontalScrollMode="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollMode="Disabled"
                          SizeChanged="ItemsStackPanel_SizeChanged"
                          SelectionChanged="List_SelectionChanged"
                          Grid.ColumnSpan="3"
                          Grid.Row="1">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemExpanded}">
                            <Setter Property="MinWidth" Value="23"/>
                            <Setter Property="MinHeight" Value="42"/>
                            <Setter Property="Height" Value="42"/>
                            <Setter Property="Margin" Value="0,2,2,0"/>
                            <Setter Property="Padding" Value="0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="viewModels:GalleryItem">
                            <Grid Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}">
                                <Image Source="{x:Bind Source, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill" Height="42"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Template>
                        <ControlTemplate TargetType="ListView">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="ScrollViewer"
                            TabNavigation="{TemplateBinding TabNavigation}"
                                              HorizontalSnapPointsAlignment="Center"
                                              HorizontalSnapPointsType="Mandatory"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                            AutomationProperties.AccessibilityView="Raw">
                                    <ItemsPresenter Header="{TemplateBinding Header}"
                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                Footer="{TemplateBinding Footer}"
                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                Padding="{TemplateBinding Padding}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListView.Template>
                </ListView>

                <Border x:Name="Details" Grid.Row="2">
                    <StackPanel Visibility="{x:Bind ViewModel.SelectedItem.From, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" Padding="12,0,0,0" VerticalAlignment="Center">
                        <TextBlock Text="{x:Bind ConvertFrom(ViewModel.SelectedItem.From), Mode=OneWay}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource BaseTextBlockStyle}"/>
                        <TextBlock Text="{x:Bind ConvertDate(ViewModel.SelectedItem.Date), Mode=OneWay, FallbackValue=ViewModel.SelectedItem.Date}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </StackPanel>
                </Border>

                <local:GlyphButton
                    Visibility="{x:Bind (Visibility)ViewModel.SelectedItem.IsShareEnabled, Mode=OneWay}"
                    Click="{x:Bind ViewModel.SelectedItem.Share, Mode=OneWay}"
                    Glyph="&#xEE35;"
                    Grid.Column="1"
                    Grid.Row="2"/>

                <Button Padding="16,23,16,0"
                        HorizontalAlignment="Right"
                        Height="48"
                        Style="{StaticResource EllipsisButton}"
                        Grid.Column="2"
                        Grid.Row="2">
                    <FontIcon x:Name="EllipsisIcon"
                              VerticalAlignment="Center"
                              FontFamily="{ThemeResource SymbolThemeFontFamily}"
                              FontSize="16"
                              Glyph="&#xE10C;"
                              Height="{ThemeResource AppBarExpandButtonCircleDiameter}" />
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Command="{x:Bind ViewModel.ViewCommand}"
                                            Visibility="{x:Bind (Visibility)ViewModel.SelectedItem.CanView, Mode=OneWay}"
                                            Text="{CustomResource ShowInChat}"/>
                            <MenuFlyoutItem x:Name="FlyoutSaveAs"
                                            Command="{x:Bind ViewModel.SaveCommand}"
                                            Visibility="{x:Bind (Visibility)ViewModel.CanSave}"
                                            Text="Save as..." />
                            <MenuFlyoutItem Command="{x:Bind ViewModel.OpenWithCommand}"
                                            Visibility="{x:Bind (Visibility)ViewModel.CanOpenWith}"
                                            Text="{CustomResource OpenInExternalApp}" />
                            <MenuFlyoutItem Command="{x:Bind ViewModel.DeleteCommand}"
                                            Visibility="{x:Bind (Visibility)ViewModel.CanDelete}"
                                            Text="{CustomResource Delete}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </Grid>
        </controls:GalleryTransportControls.Footer>
    </controls:GalleryTransportControls>
</local:ContentDialogBase>
