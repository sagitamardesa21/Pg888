<Page
    x:Class="Unigram.Views.Supergroups.SupergroupEventLogPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unigram.Views"
    xmlns:controls="using:Unigram.Controls"
    xmlns:common="using:Unigram.Common"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:messages="using:Unigram.Controls.Messages"
    xmlns:tl="using:Telegram.Api.TL"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Loaded="OnLoaded"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="SendButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{ThemeResource TelegramForegroundAccentBrush}"/>
            <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckedStates">
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Indicator">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="RootGrid">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <DataTemplate x:Key="EmptyMessageTemplate"/>

        <!-- Region Service -->

        <DataTemplate x:Key="ServiceMessagePhotoTemplate">
            <StackPanel Margin="0,8,0,8" ContextRequested="Message_ContextRequested">
                <messages:MessageService Click="ServiceMessage_Click" ContextRequested="Message_ContextRequested" Style="{StaticResource ServiceButtonStyle}">
                    <TextBlock Foreground="White" TextAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
                </messages:MessageService>

                <Border Width="96" Height="96" CornerRadius="48" Background="Black" Margin="0,8,0,0">
                    <controls:ProfilePicture Source="{Binding Action.Photo, Converter={StaticResource DefaultPhotoConverter}}" Width="96" Height="96"/>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ServiceMessageTemplate">
            <messages:MessageService Click="ServiceMessage_Click" ContextRequested="Message_ContextRequested" Margin="0,4,0,4" Style="{StaticResource ServiceButtonStyle}">
                <TextBlock Foreground="White" TextAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            </messages:MessageService>
        </DataTemplate>

        <!-- EndRegion -->

        <DataTemplate x:Key="UserMessageTemplate">
            <messages:MessageBubble x:Name="Bubble" ContextRequested="Message_ContextRequested" DoubleTapped="Message_DoubleTapped">
                <FrameworkElement.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="ms-appx:///Themes/AccentOut.xaml"/>
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </FrameworkElement.Resources>
            </messages:MessageBubble>
        </DataTemplate>

        <DataTemplate x:Key="FriendMessageTemplate">
            <Grid HorizontalAlignment="{ThemeResource MessageHorizontalAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <messages:MessageBubble x:Name="Bubble" ContextRequested="Message_ContextRequested" DoubleTapped="Message_DoubleTapped"/>

                <!--<Border Visibility="{x:Bind Converter={StaticResource MessageToShareConverter}}"
                     Background="{ThemeResource MessageServiceBackgroundBrush}"
                     VerticalAlignment="Bottom"
                     CornerRadius="14"
                     Margin="8,0,0,4"
                     Grid.Column="1">
                     <controls:GlyphButton Click="Share_Click" Glyph="&#xEE35;" Foreground="{ThemeResource MessageServiceForegroundBrush}" FontSize="14" Width="28" Height="28" CornerRadius="14"/>
                     </Border>-->
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ChatFriendMessageTemplate">
            <Grid Margin="-52,0,0,0" HorizontalAlignment="{ThemeResource MessageHorizontalAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="52"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<controls:ProfilePicture x:Phase="3"
                     x:Name="PhotoBubble"
                     Style="{StaticResource MessageBubbleProfilePictureStyle}"
                     Source="{x:Bind Participant.PhotoSelf, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}"
                     Visibility="{x:Bind (Visibility)IsLast, Mode=OneWay}"
                     Click="Photo_Click"/>-->
                <messages:MessageBubble x:Name="Bubble" ContextRequested="Message_ContextRequested" DoubleTapped="Message_DoubleTapped" Grid.Column="1"/>

                <!--<Border Visibility="{x:Bind Converter={StaticResource MessageToShareConverter}}"
                     Background="{ThemeResource MessageServiceBackgroundBrush}"
                     VerticalAlignment="Bottom"
                     CornerRadius="14"
                     Margin="8,0,0,4"
                     Grid.Column="2">
                     <controls:GlyphButton Click="Share_Click" Glyph="&#xEE35;" Foreground="{ThemeResource MessageServiceForegroundBrush}" FontSize="14" Width="28" Height="28" CornerRadius="14"/>
                     </Border>
                     <Border Visibility="{x:Bind FwdFrom.HasSavedFromMsgId, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                     Background="{ThemeResource MessageServiceBackgroundBrush}"
                     VerticalAlignment="Bottom"
                     CornerRadius="14"
                     Margin="8,0,0,4"
                     Grid.Column="2">
                     <controls:GlyphButton Click="View_Click" Glyph="&#xE90B;" FontFamily="{StaticResource TelegramThemeFontFamily}" Padding="0,2,0,0" Foreground="{ThemeResource MessageServiceForegroundBrush}" FontSize="14" Width="28" Height="28" CornerRadius="14"/>
                     </Border>-->
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid x:Name="Header"
              Background="{ThemeResource TelegramTitleBarBackgroundBrush}"
              Height="{ThemeResource AppBarThemeCompactHeight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <controls:ProfilePicture x:Name="Photo" Width="36" Height="36" Margin="12,0" IsHitTestVisible="False"/>

            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Grid.Column="1">
                <TextBlock x:Name="Title"
                           Style="{StaticResource BaseTextBlockStyle}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap"
                           MaxLines="1"/>
                <TextBlock x:Name="Subtitle"
                           Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                           Style="{StaticResource CaptionTextBlockStyle}"
                           Text="{CustomResource EventLogAllEvents}"/>
            </StackPanel>

            <!--<controls:GlyphButton Glyph="&#xE11A;" Grid.Column="2"/>-->

            <Border BorderThickness="0,0,0,1" BorderBrush="{ThemeResource TelegramSeparatorBrush}" VerticalAlignment="Bottom" IsHitTestVisible="False" Grid.ColumnSpan="3"/>
        </Grid>

        <controls:PaddedListView
            x:Name="Messages"
            ItemsSource="{x:Bind ViewModel.Items}"
            ChoosingItemContainer="OnChoosingItemContainer"
            ContainerContentChanging="OnContainerContentChanging"
            SelectionMode="None"
            Grid.Row="1">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"
                                     VerticalAlignment="Bottom" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyleSelector>
                <selectors:MessageStyleSelector>
                    <selectors:MessageStyleSelector.MessageStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                            <Setter Property="TabNavigation" Value="Local"/>
                            <Setter Property="IsHoldingEnabled" Value="True"/>
                            <Setter Property="Padding" Value="12,0,12,0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter
                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                            SelectionCheckMarkVisualEnabled="True"
                                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                            PointerOverBackground="Transparent"
                                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                                            PressedBackground="Transparent"
                                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ContentMargin="{TemplateBinding Padding}"
                                            CheckMode="Inline"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </selectors:MessageStyleSelector.MessageStyle>
                    <selectors:MessageStyleSelector.ServiceStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                            <Setter Property="TabNavigation" Value="Local"/>
                            <Setter Property="IsHoldingEnabled" Value="True"/>
                            <Setter Property="Padding" Value="12,0,12,0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter
                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                            SelectionCheckMarkVisualEnabled="False"
                                            CheckBrush="{x:Null}"
                                            CheckBoxBrush="{x:Null}"
                                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                            PointerOverBackground="Transparent"
                                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                            SelectedBackground="Transparent"
                                            SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                            PressedBackground="Transparent"
                                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ContentMargin="{TemplateBinding Padding}"
                                            CheckMode="Overlay"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </selectors:MessageStyleSelector.ServiceStyle>
                </selectors:MessageStyleSelector>
            </ListView.ItemContainerStyleSelector>
            <ListView.Footer>
                <Border Height="8"/>
            </ListView.Footer>
        </controls:PaddedListView>

        <Border Visibility="{x:Bind ViewModel.IsEmpty, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Background="{ThemeResource MessageServiceBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,8,12,8" Margin="12" CornerRadius="{ThemeResource MessageServiceCornerRadius}" Grid.Row="1">
            <TextBlock common:TextBlockHelper.Markdown="{x:Bind ConvertType('EventLogEmptyChannel', 'EventLogEmpty')}" Foreground="White" TextAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}"/>
        </Border>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Height="{ThemeResource AppBarThemeCompactHeight}" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!--<Button Click="Settings_Click" Content="FILTER" Style="{StaticResource SendButtonStyle}" Grid.ColumnSpan="2"/>-->
            <controls:GlyphButton Click="Help_Click" Glyph="&#xE11B;" Foreground="{ThemeResource TelegramForegroundAccentBrush}" Grid.Column="1"/>

            <Border BorderThickness="0,1,0,0" BorderBrush="{ThemeResource TelegramSeparatorBrush}" IsHitTestVisible="False" Grid.ColumnSpan="2"/>
        </Grid>
    </Grid>
</Page>
