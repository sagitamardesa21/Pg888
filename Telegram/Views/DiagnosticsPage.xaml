<local:HostedPage x:Class="Telegram.Views.DiagnosticsPage"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:local="using:Telegram.Views"
                  xmlns:common="using:Telegram.Common"
                  xmlns:controls="using:Telegram.Controls"
                  xmlns:services="using:Telegram.Services"
                  xmlns:viewModels="using:Telegram.ViewModels"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  mc:Ignorable="d">

    <Grid Background="{ThemeResource SettingsPageBackground}">
        <ScrollViewer x:Name="ScrollingHost"
                      VerticalScrollBarVisibility="Auto"
                      VerticalScrollMode="Auto">
            <controls:SettingsPanel>
                <controls:HeaderedControl Header="Experimental">
                    <CheckBox IsChecked="{x:Bind ViewModel.UseTestDC, Mode=TwoWay}"
                              Visibility="{x:Bind ViewModel.CanUseTestDC}"
                              Content="Use Test DC"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind services:SettingsService.Current.Diagnostics.DisableRendering, Mode=TwoWay}"
                              Content="Disable D2D1 rendering"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind services:SettingsService.Current.Diagnostics.DisableClipping, Mode=TwoWay}"
                              Content="Disable DComp clipping"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind ViewModel.AllowRightToLeft, Mode=TwoWay}"
                              Content="Allow right to left"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind ViewModel.IsPointerOverEnabled, Mode=TwoWay}"
                              Content="Show stickers panel on pointer over"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind ViewModel.PreferIpv6, Mode=TwoWay}"
                              Content="{CustomResource ConnectWithIPv6}"
                              Style="{StaticResource SettingsCheckBoxStyle}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="Crash mitigation">
                    <CheckBox IsChecked="{x:Bind ViewModel.LegacyScrollBars, Mode=TwoWay}"
                              Content="Legacy ScrollBar style"
                              Style="{StaticResource SettingsCheckBoxStyle}" />

                    <CheckBox IsChecked="{x:Bind ViewModel.LegacyScrollViewers, Mode=TwoWay}"
                              Content="Legacy ScrollViewer style"
                              Style="{StaticResource SettingsCheckBoxStyle}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="In-Memory Logs">
                    <CheckBox IsChecked="{x:Bind ViewModel.LoggerSink, Mode=TwoWay}"
                              Content="Write app logs to tdlib_log.txt"
                              Style="{StaticResource SettingsCheckBoxStyle}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="Calls Logs">
                    <controls:BadgeButton Content="tgcalls.txt"
                                          Click="{x:Bind ViewModel.SendCalls}"
                                          Badge="{x:Bind ConvertSize(ViewModel.LogCallsSize), Mode=OneWay}" />
                    <controls:BadgeButton Content="tgcalls_group.txt"
                                          Click="{x:Bind ViewModel.SendGroupCalls}"
                                          Badge="{x:Bind ConvertSize(ViewModel.LogGroupCallsSize), Mode=OneWay}" />
                    <controls:BadgeButton Content="Video informations"
                                          Click="{x:Bind ViewModel.VideoInfo}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="TDLib Logs"
                                          Footer="**Warning**: TDLib Logs will contain **private data** if Verbosity Level was ever set to VERBOSE or higher value.&#x0a;&#x0a;Using high Verbosity Level will dramatically slow down the app as well.">
                    <controls:BadgeButton Content="Verbosity Level">
                        <controls:BadgeButton.Badge>
                            <controls:SettingsComboBox ItemsSource="{x:Bind ViewModel.VerbosityOptions}"
                                                       SelectedIndex="{x:Bind ViewModel.Verbosity, Mode=TwoWay}"
                                                       DisplayMemberPath="Text" />
                        </controls:BadgeButton.Badge>
                    </controls:BadgeButton>
                    <controls:BadgeButton Content="tdlib_log.txt"
                                          Click="{x:Bind ViewModel.SendLog}"
                                          Badge="{x:Bind ConvertSize(ViewModel.LogSize), Mode=OneWay}" />
                    <controls:BadgeButton Content="tdlib_log.txt.old"
                                          Click="{x:Bind ViewModel.SendLogOld}"
                                          Badge="{x:Bind ConvertSize(ViewModel.LogOldSize), Mode=OneWay}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl>
                    <controls:BadgeButton Content="Disable Database"
                                          Click="{x:Bind ViewModel.DisableDatabase}"
                                          Foreground="{ThemeResource DangerButtonBackground}"
                                          Visibility="{x:Bind ViewModel.IsDatabaseDisabled, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}" />
                    <controls:BadgeButton Content="Enable Database"
                                          Click="{x:Bind ViewModel.DisableDatabase}"
                                          Visibility="{x:Bind ViewModel.IsDatabaseDisabled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="TDLib Modules"
                                          ItemsSource="{x:Bind ViewModel.Tags}">
                    <controls:HeaderedControl.ItemTemplate>
                        <DataTemplate x:DataType="viewModels:DiagnosticsTag">
                            <controls:BadgeButton Click="{x:Bind Change}"
                                                  Content="{x:Bind Name}"
                                                  Badge="{x:Bind Text, Mode=OneWay}" />
                        </DataTemplate>
                    </controls:HeaderedControl.ItemTemplate>
                </controls:HeaderedControl>

                <controls:HeaderedControl Header="Options"
                                          ItemsSource="{x:Bind ViewModel.Options}">
                    <controls:HeaderedControl.ItemTemplate>
                        <DataTemplate x:DataType="viewModels:DiagnosticsOption">
                            <controls:BadgeButton Content="{x:Bind Name}"
                                                  Badge="{x:Bind Value}" />
                        </DataTemplate>
                    </controls:HeaderedControl.ItemTemplate>
                </controls:HeaderedControl>

                <controls:HeaderedControl>
                    <controls:BadgeButton Content="Crash the app &#x2620;"
                                          Click="Crash_Click" />
                </controls:HeaderedControl>
            </controls:SettingsPanel>
        </ScrollViewer>
    </Grid>
</local:HostedPage>
